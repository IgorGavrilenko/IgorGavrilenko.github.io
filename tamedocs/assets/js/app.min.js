/******/ (() => { // webpackBootstrap
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other entry modules.
(() => {
/*!****************************!*\
  !*** ./src/scripts/app.js ***!
  \****************************/
$(document).ready(function () {
  'use strict'; // mobile menu

  function mobile() {
    var toggleMobileNav = $(".header-nav-toggle");
    var toggleMobileNavOpen = "header-nav-toggle--open";
    var mobileNav = $(".header-nav");
    var body = $(".body");
    var mobileNavOverlay = $(".header-nav-overlay");
    var bodyIsLocked = "body-is-locked";
    var mobileNavOverlayIsLocked = "header-nav-overlay--locked";
    var mobileNavOpen = "header-nav--open";
    var mobileMenuLink = $(".header-nav__link");
    var parent = '.header-nav__menu';
    var trigger = '.header-nav__link';
    var item = '.header-submenu';
    var itemActiveClass = 'is-active';
    toggleMobileNav.on("click", function (e) {
      $(this).toggleClass(toggleMobileNavOpen);
      mobileNav.toggleClass(mobileNavOpen);
      mobileNavOverlay.toggleClass(mobileNavOverlayIsLocked);
      body.toggleClass(bodyIsLocked);
    });
    mobileNavOverlay.on("click", function (e) {
      $(this).removeClass(mobileNavOverlayIsLocked);
      toggleMobileNav.removeClass(toggleMobileNavOpen);
      mobileNav.removeClass(mobileNavOpen);
      body.removeClass(bodyIsLocked);
    });
    mobileMenuLink.on('click', function () {
      if (!$(this).hasClass(itemActiveClass)) {
        $(this).addClass(itemActiveClass);
      } else {
        $(this).removeClass(itemActiveClass);
      }
    });
    body.on('click', function (event) {
      if ($(event.target).closest(parent).length) return;
      mobileMenuLink.removeClass(itemActiveClass);
    });
  }

  ;
  mobile(); // example carousel

  (function () {
    var $carouselDemo = $('.carousel-demo');
    $carouselDemo.slick({
      vertical: true,
      verticalSwiping: true,
      slidesToShow: 1,
      slidesToScroll: 1,
      dots: true,
      arrows: false,
      responsive: [{
        breakpoint: 1200,
        settings: {
          vertical: false,
          verticalSwiping: false
        }
      }]
    });
  })(); // reviews carousel


  (function () {
    var $carouselReview = $('.carousel-review');
    $carouselReview.slick({
      infinite: false
    });
  })(); // spoiler


  (function () {
    var $faqItem = $('.faq__item');
    var $faqHead = $('.faq__head');
    var $faqBody = $('.faq__body');
    var $one = 'one';
    var $isActive = 'is-active';
    $faqHead.on('click', function (event) {
      if ($faqItem.hasClass($one)) {
        $faqHead.not($(this).removeClass($isActive));
        $faqBody.not($(this).next()).slideUp(150);
      }

      $(this).toggleClass($isActive).next().slideToggle(150);
    });
  })(); // card animation


  (function () {
    var $infoItem = $('.info__item');
    var $viewportCheckerOpt = {
      classToAdd: 'visible animate__animated animate__fadeInUp',
      offset: 100
    };

    if ($infoItem.length) {
      $infoItem.viewportChecker($viewportCheckerOpt);
    }
  })(); // card numbering


  (function () {
    var $infoListCount = $('.info__list');
    var $infoItemCount = '.info__item';
    var $infoNumCount = '.info__num';
    $infoListCount.each(function () {
      $($infoItemCount, this).each(function (i) {
        $(this).find($infoNumCount).text(('0' + (i + 1)).slice(-2));
      });
    });
  })(); // sticky list


  (function () {
    var stickyBlock = $('.js-sticky-block');
    var stickyBlockParent = $('.privacy__sidebar');

    if (stickyBlock.length && stickyBlockParent.length) {
      var block_pos = stickyBlock.offset().top;
      var wrap_pos = stickyBlockParent.offset().top;
      var block_height = stickyBlock.outerHeight();
      var wrap_height = stickyBlockParent.outerHeight();
      var block_width = stickyBlock.outerWidth();
      var pos_absolute = wrap_pos + wrap_height - block_height;
      $(window).scroll(function () {
        if ($(window).scrollTop() > pos_absolute) {
          stickyBlock.css({
            'position': 'absolute',
            'top': wrap_height - block_height,
            'width': block_width
          });
        } else if ($(window).scrollTop() > block_pos) {
          stickyBlock.css({
            'position': 'fixed',
            'top': '20px',
            'width': block_width
          });
        } else {
          stickyBlock.css({
            'position': 'static'
          });
        }
      });
    }

    ;
  })(); // sticky list active item


  (function () {
    var $item = $('.js-sticky-block').find('a');
    var $ItemActiveClass = 'is-active';
    $item.each(function (a) {
      $(this).on('click', function () {
        $item.removeClass($ItemActiveClass).eq(a).addClass($ItemActiveClass);
      });
    });
  })(); // scroll to selected anchor


  (function () {
    var $item = $('.js-sticky-block').find('a');
    var $root = $('html, body');
    var $animDl = 150;
    var $attr = 'href';

    if ($item.length) {
      $item.on('click', function (e) {
        var $anchor = $(this);
        $root.stop().animate({
          scrollTop: $($anchor.attr($attr)).offset().top - 20
        }, $animDl);
        e.preventDefault();
        return false;
      });
    }
  })(); // add country code on telephone numbers


  (function () {
    var $tel = $('#tel');
    $tel.intlTelInput({
      nationalMode: false,
      separateDialCode: true
    });
  })(); // custom select


  (function () {
    $('#select').multipleSelect();
  })();
});
})();

// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!*****************************!*\
  !*** ./src/styles/app.scss ***!
  \*****************************/
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin

})();

/******/ })()
;
//# sourceMappingURL=app.min.js.map